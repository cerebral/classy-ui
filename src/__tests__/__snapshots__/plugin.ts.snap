// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classy-ui should allow group with conditional after it: should allow group with conditional after it 1`] = `

import { compose, group, tokens } from 'classy-ui'

compose(group, true ? tokens.color.RED : ' ')

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity((true ? 'color__RED ' : ' ') + 'group ');

_addClasses(['color__RED', '.color__RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should convert both breakpoints and pseudos: should convert both breakpoints and pseudos 1`] = `

import { tablet, tokens } from 'classy-ui'

tablet(tokens.color.RED.hover)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:tablet:color__RED ');

_addClasses([
  'hover:tablet:color__RED',
  '@media (max-width: 768px) {.hover\\\\:tablet\\\\:color__RED:hover {\\n  color: red;\\n}}',
]);


`;

exports[`classy-ui should convert breakpoints: should convert breakpoints 1`] = `

import { tablet, tokens } from 'classy-ui'

tablet(tokens.color.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('tablet:color__RED ');

_addClasses(['tablet:color__RED', '@media (max-width: 768px) {.tablet\\\\:color__RED {\\n  color: red;\\n}}']);


`;

exports[`classy-ui should convert pseudos: should convert pseudos 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED.hover)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('hover:color__RED ');

_addClasses(['hover:color__RED', '.hover\\\\:color__RED:hover {\\n  color: red;\\n}']);


`;

exports[`classy-ui should convert simple: should convert simple 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color__RED ');

_addClasses(['color__RED', '.color__RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should fix specificity inside object: should fix specificity inside object 1`] = `

import { compose, tokens } from 'classy-ui'

const buttonBlue = compose(tokens.color.BLUE);
const buttonGreen = compose(tokens.color.GREEN);

const buttonRed = compose(buttonBlue, buttonGreen, tokens.color.RED);

{className: compose(buttonRed, tokens.color.GREEN.hover)}

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity2 } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const buttonBlue = 'color__BLUE ';
const buttonGreen = 'color__GREEN ';

const buttonRed = _fixSpecificity(buttonBlue + buttonGreen + 'color__RED ');

{
  className: _fixSpecificity2(buttonRed + 'hover:color__GREEN ');
}

_addClasses([
  'color__BLUE',
  '.color__BLUE {\\n  color: blue;\\n}',
  'hover:color__GREEN',
  '.hover\\\\:color__GREEN:hover {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'color__RED',
  '.color__RED {\\n  color: red;\\n}',
]);


`;

exports[`classy-ui should fix specifiy issue in dynamic composition: should fix specifiy issue in dynamic composition 1`] = `

import { compose, tokens } from 'classy-ui'
const aCompose = compose(tokens.color.BLUE, tokens.backgroundColor.BLUE)
const moreCompose = compose(tokens.color.GREEN, tokens.backgroundColor.GREEN)

compose(aCompose, moreCompose, tokens.color.RED, tokens.backgroundColor.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';
const aCompose = 'color__BLUE background-color__BLUE ';
const moreCompose = 'color__GREEN background-color__GREEN ';

_fixSpecificity(aCompose + moreCompose + 'color__RED background-color__RED ');

_addClasses([
  'color__BLUE',
  '.color__BLUE {\\n  color: blue;\\n}',
  'background-color__BLUE',
  '.background-color__BLUE {\\n  background-color: blue;\\n}',
  'color__GREEN',
  '.color__GREEN {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'background-color__GREEN',
  '.background-color__GREEN {\\n  background-color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'color__RED',
  '.color__RED {\\n  color: red;\\n}',
  'background-color__RED',
  '.background-color__RED {\\n  background-color: red;\\n}',
]);


`;

exports[`classy-ui should handle binary expressions: should handle binary expressions 1`] = `

import { compose, tokens } from 'classy-ui'

compose(true && tokens.color.RED)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity(true ? 'color__RED ' : ' ');

_addClasses(['color__RED', '.color__RED {\\n  color: red;\\n}']);


`;

exports[`classy-ui should handle complex dynamic composition: should handle complex dynamic composition 1`] = `

import { compose, group, tokens } from 'classy-ui'

c(group, true ? tokens.color.RED : ' ', tokens.backgroundColor.RED, true ? tokens.display.BLOCK : ' ', tokens.display.INLINE_BLOCK)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
c(
  'group ',
  true ? 'c:color__RED ' : ' ',
  'c:background-color__RED ',
  true ? 'c:display__BLOCK ' : ' ',
  'c:display__INLINE_BLOCK ',
);

_addClasses([
  'c:color__RED',
  '.c\\\\:color__RED {\\n  color: red;\\n}',
  'c:background-color__RED',
  '.c\\\\:background-color__RED {\\n  background-color: red;\\n}',
  'c:display__BLOCK',
  '.c\\\\:display__BLOCK {\\n  display: block;\\n}',
  'c:display__INLINE_BLOCK',
  '.c\\\\:display__INLINE_BLOCK {\\n  display: inline-block;\\n}',
]);


`;

exports[`classy-ui should handle conditional expression: should handle conditional expression 1`] = `

import { compose, tokens } from 'classy-ui'

compose(true ? tokens.color.GREEN : tokens.color.RED )

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity(true ? 'color__GREEN ' : 'color__RED ');

_addClasses([
  'color__GREEN',
  '.color__GREEN {\\n  color: var(--colors-GREEN);\\n}:root{--colors-GREEN:green;}\\n.themes-dark{--colors-GREEN:yellow;}',
  'color__RED',
  '.color__RED {\\n  color: red;\\n}',
]);


`;

exports[`classy-ui should handle derived classnames: should handle derived classnames 1`] = `

import { compose, tokens } from 'classy-ui'

{className: compose(tokens.padding.SPACE_1)}

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
{
  className: 'padding-top__SPACE_1 padding-right__SPACE_1 padding-bottom__SPACE_1 padding-left__SPACE_1 ';
}

_addClasses([
  'padding-top__SPACE_1',
  '.padding-top__SPACE_1 {\\n  padding-top: 1rem;\\n}',
  'padding-right__SPACE_1',
  '.padding-right__SPACE_1 {\\n  padding-right: 1rem;\\n}',
  'padding-bottom__SPACE_1',
  '.padding-bottom__SPACE_1 {\\n  padding-bottom: 1rem;\\n}',
  'padding-left__SPACE_1',
  '.padding-left__SPACE_1 {\\n  padding-left: 1rem;\\n}',
]);


`;

exports[`classy-ui should handle dynamic calls to some function: should handle dynamic calls to some function 1`] = `

import { compose, group } from 'classy-ui'

compose(group, someFunction())

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
import { fixSpecificity as _fixSpecificity } from 'classy-ui/runtime';

_fixSpecificity(someFunction() + 'group ');

_addClasses([]);


`;

exports[`classy-ui should handle themes: should handle themes 1`] = `

import { themes } from 'classy-ui'

c(themes.dark)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
c('themes-dark ');

_addClasses([]);


`;

exports[`classy-ui should not override same token with different decorators: should not override same token with different decorators 1`] = `

import { compose, tokens, mobile } from 'classy-ui'

compose(tokens.color.RED, mobile(tokens.color.RED))

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('color__RED mobile:color__RED ');

_addClasses([
  'color__RED',
  '.color__RED {\\n  color: red;\\n}',
  'mobile:color__RED',
  '@media (max-width: 640px) {.mobile\\\\:color__RED {\\n  color: red;\\n}}',
]);


`;

exports[`classy-ui should not throw when using group inside c call: should not throw when using group inside c call 1`] = `

import { compose, group } from 'classy-ui'

compose(group)

      â†“ â†“ â†“ â†“ â†“ â†“

import { addClasses as _addClasses } from 'classy-ui/runtime';
('group ');

_addClasses([]);


`;

exports[`classy-ui should throw when nesting c call: should throw when nesting c call 1`] = `

import { compose, tokens } from 'classy-ui'

compose(compose(tokens.color.BLUE))

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: CLASSY-UI: don't nest c/compose calls
[0m [90m 1 | [39m[36mimport[39m { compose[33m,[39m tokens } from [32m'classy-ui'[39m[0m
[0m [90m 2 | [39m[0m
[0m[31m[1m>[22m[39m[90m 3 | [39mcompose(compose(tokens[33m.[39mcolor[33m.[39m[33mBLUE[39m))[0m
[0m [90m   | [39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;

exports[`classy-ui should throw when using default import: should throw when using default import 1`] = `

import classy from 'classy-ui'

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: This style of importing isn't allowed.
[0m[31m[1m>[22m[39m[90m 1 | [39m[36mimport[39m classy from [32m'classy-ui'[39m[0m
[0m [90m   | [39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;

exports[`classy-ui should throw when using invalid class: should throw when using invalid class 1`] = `

import { compose, tokens } from 'classy-ui'

compose(tokens.color.BLU)

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: CLASSY-UI: The token BLU does not exist on property color
[0m [90m 1 | [39m[36mimport[39m { compose[33m,[39m tokens } from [32m'classy-ui'[39m[0m
[0m [90m 2 | [39m[0m
[0m[31m[1m>[22m[39m[90m 3 | [39mcompose(tokens[33m.[39mcolor[33m.[39m[33mBLU[39m)[0m
[0m [90m   | [39m        [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;

exports[`classy-ui should throw when using namespace import: should throw when using namespace import 1`] = `

import * as classy from 'classy-ui'

      â†“ â†“ â†“ â†“ â†“ â†“

SyntaxError: unknown: This style of importing isn't allowed.
[0m[31m[1m>[22m[39m[90m 1 | [39m[36mimport[39m [33m*[39m as classy from [32m'classy-ui'[39m[0m
[0m [90m   | [39m       [31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[31m[1m^[22m[39m[0m

`;
